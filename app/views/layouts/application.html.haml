!!!
%html
  %head
    %meta{content: "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}
    %title LivingLocation
    %script{async: "", defer: "defer", src: "//maps.googleapis.com/maps/api/js?language=ja&key=#{ENV['GOOGLE_MAP_APIKEY']}"}
    %script{src: "//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"}
    %script{src: "//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js", type: "text/javascript"}
    
    = stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track' => true
    = javascript_include_tag 'application', 'data-turbolinks-track': 'reload'
    = csrf_meta_tags

  %body
    = render 'layouts/notifications'
    %header.header
      .header__bar.row
        %h1.grid-6
          = link_to "Living Loction", root_path, "data-turbolinks": false
        - if user_signed_in?
          .user_nav.grid-6
            %span
              = current_user.nickname
              %ul.user__info
                %li
                  = link_to "マイページ", "/users/#{current_user.id}"
                  = link_to "ログアウト", destroy_user_session_path, method: :delete
            = link_to  "投稿する", "/posts/new", class: "post"
        - else
          .grid-6
            = link_to "ログイン", new_user_session_path, class: 'post'
            = link_to "新規登録", new_user_registration_path, class: 'post'

    = yield
    :javascript
      handler = Gmaps.build("Google");
      if(document.getElementById('show-map')){
        handler.buildMap({ provider: {}, internal: {id: "show-map"}}, function(){ //showのmap
          markers = handler.addMarkers(#{raw @hash.to_json}, {animation: google.maps.Animation.DROP});
          console.log("hello");
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
          handler.getMap().setZoom(15);
        });
      } else if(document.getElementById('map')){
        handler.buildMap({ provider: {}, internal: {id: "map"}}, function(){ //indexのmap
          markers = handler.addMarkers(#{raw @hash.to_json}, {animation: google.maps.Animation.DROP});
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
          handler.getMap().setZoom(3);
          handler.getMap().setCenter({lat: #{raw @hash.first.values.first.to_json}, lng: #{raw @hash.first.values.second.to_json}}); //最新のレコードの位置情報をセット
        });
      } else {
        console.log("hoge");
      }
    %footer
      %p
        Copyright livinglocation 2020.
